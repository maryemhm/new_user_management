name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Vérifier le code source
      - name: Checkout code
        uses: actions/checkout@v4

      # Étape 2 : Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: |
          cd backend
          npm install
          cd ../frontend
          npm install

      # Étape 4 : Exécuter les tests
      - name: Run tests
        run: |
          cd backend
          npm test
        continue-on-error: true

      # Étape 5 : Construire les images Docker
      - name: Build Docker images
        run: |
          docker-compose -f docker-compose.prod.yml build

      # Étape 6 : Se connecter à Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # Étape 7 : Pousser l'image Docker du frontend
      - name: Push frontend image
        run: |
          docker tag frontend ${{ secrets.DOCKER_HUB_USERNAME }}/user-management-frontend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/user-management-frontend:latest

      # Étape 8 : Pousser l'image Docker du backend
      - name: Push backend image
        run: |
          docker tag backend ${{ secrets.DOCKER_HUB_USERNAME }}/user-management-backend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/user-management-backend:latest